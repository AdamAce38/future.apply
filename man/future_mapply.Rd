% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/future_mapply.R
\name{future_mapply}
\alias{future_mapply}
\title{Apply a Function to Multiple List or Vector Arguments}
\usage{
future_mapply(FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE,
  USE.NAMES = TRUE, future.globals = TRUE, future.packages = NULL,
  future.seed = FALSE, future.lazy = FALSE, future.scheduling = 1)
}
\arguments{
\item{FUN}{A function to apply, found via \code{\link[base:match.fun]{base::match.fun()}}.}

\item{MoreArgs}{A list of other arguments to \code{FUN}.}

\item{SIMPLIFY}{A logical or character string; attempt to reduce the
result to a vector, matrix or higher dimensional array; see the simplify
argument of \code{\link[base:sapply]{base::sapply()}}.}

\item{USE.NAMES}{A logical; use names if the first \ldots argument has
names, or if it is a character vector, use that character vector as the
names.}

\item{future.globals}{A logical, a character vector, or a named list for
controlling how globals are handled. For details, see below section.}

\item{future.packages}{(optional) a character vector specifying packages
to be attached in the R environment evaluating the future.}

\item{future.seed}{A logical or an integer (of length one or seven),
or a list of \code{length(X)} with pre-generated random seeds.
For details, see below section.}

\item{future.lazy}{Specifies whether the futures should be resolved
lazily or eagerly (default).}

\item{future.scheduling}{Average number of futures ("chunks") per worker.
If \code{0.0}, then a single future is used to process all elements
of \code{X}.
If \code{1.0} or \code{TRUE}, then one future per worker is used.
If \code{2.0}, then each worker will process two futures
(if there are enough elements in \code{X}).
If \code{Inf} or \code{FALSE}, then one future per element of
\code{X} is used.}

\item{\ldots}{Arguments to vectorize over (vectors or lists of strictly
positive length, or all of zero length).}
}
\value{
A list, or for \code{SIMPLIFY = TRUE}, a vector, array or list.
See \code{\link[base:sapply]{base::sapply()}} for details.
}
\description{
future_mapply()\code{is a multivariate version of}future_sapply().
It applies \code{FUN} to the first elements of each \ldots argument,
the second elements, the third elements, and so on.
Arguments are recycled if necessary.
}
\keyword{iteration}
\keyword{manip}
\keyword{programming}
